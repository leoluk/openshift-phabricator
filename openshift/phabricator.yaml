apiVersion: v1
kind: Template
labels:
  app: phabricator
  template: phabricator
metadata:
  name: phabricator
  template.openshift.io/bindable: "false"
parameters:
- displayName: Name
  name: NAME
  required: true
  value: phabricator
- displayName: Git Repository
  name: GIT_REPO
  required: true
  value: https://github.com/leoluk/openshift-phabricator
- displayName: Git Reference
  name: GIT_REF
  required: true
  value: master
- displayName: Phabricator Base Domain
  name: PHAB_BASE_HOST
  required: true
- displayName: Phabricator File/CDN Domain
  name: PHAB_FILE_HOST
  required: true
- displayName: Phabricator SSH Domain
  name: PHAB_SSH_HOST
  required: false
- displayName: nodePort for sshd pod
  name: PHAB_SSH_PORT
  required: true
  value: "30022"
- description: Password for the MariaDB root user.
  displayName: MariaDB root Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_ROOT_PASSWORD
  required: true
- description: Database volume capacity
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Database buffer pool capacity
  displayName: Database Pool Size
  name: MYSQL_POOL_SIZE
  required: true
  value: 2000M

objects:

#------------------------------------------------- Base Image

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}-php

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${NAME}-php
    name: ${NAME}-php
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-php:7.1
    runPolicy: Serial
    source:
      contextDir: openshift
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: centos/php-71-centos7
      type: Docker
    triggers:
    - type: ConfigChange


#------------------------------------------------- Phabricator

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-repositories
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-files
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-config
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit: {}
    runPolicy: Serial
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${NAME}-php:7.1
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        volumes:
        - name: repositories
          persistentVolumeClaim:
            claimName: ${NAME}-repositories
        - name: files
          persistentVolumeClaim:
            claimName: ${NAME}-files
        - name: config
          persistentVolumeClaim:
            claimName: ${NAME}-config
        containers:
        - env:
          - name: DATABASE_SERVICE_HOST
            value: ${NAME}-db
          - name: DATABASE_SERVICE_PORT
            value: "3306"
          - name: DATABASE_SERVICE_USER
            value: root
          - name: DATABASE_SERVICE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${NAME}-db
          - name: APHLICT_SERVICE
            value: ${NAME}-aphlict
          - name: PHAB_BASE_HOST
            value: ${PHAB_BASE_HOST}
          - name: PHAB_FILE_HOST
            value: ${PHAB_FILE_HOST}
          - name: PHAB_SSH_PORT
            value: ${PHAB_SSH_PORT}
          - name: PHAB_SSH_PORT
            value: ${PHAB_SSH_PORT}
          name: ${NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
            - name: repositories
              mountPath: /opt/app-root/repositories
            - name: files
              mountPath: /opt/app-root/files
            - name: config
              mountPath: /opt/app-root/src/phabricator/conf/local
        restartPolicy: Always
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-phd
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}-phd
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}-phd
      spec:
        volumes:
        - name: repositories
          persistentVolumeClaim:
            claimName: ${NAME}-repositories
        - name: files
          persistentVolumeClaim:
            claimName: ${NAME}-files
        - name: config
          persistentVolumeClaim:
            claimName: ${NAME}-config
        containers:
        - name: ${NAME}-phd
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
            - name: repositories
              mountPath: /opt/app-root/repositories
            - name: files
              mountPath: /opt/app-root/files
            - name: config
              mountPath: /opt/app-root/src/phabricator/conf/local
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "source /opt/app-root/etc/generate_container_user && /opt/app-root/src/phabricator/bin/phd start && tail -f /var/tmp/phd/log/daemons.log"
        restartPolicy: Always
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}-phd
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-aphlict
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}-aphlict
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}-aphlict
      spec:
        containers:
        - name: ${NAME}-aphlict
          ports:
          - containerPort: 22280
            protocol: TCP
          - containerPort: 22281
            protocol: TCP
          command:
            - "/bin/sh"
          # TODO: pin ws version and install during assemble
          args:
            - "-c"
            - ". /opt/app-root/etc/scl_enable && npm add ws && phabricator/bin/aphlict debug --config /opt/app-root/src/aphlict.config.json"
        restartPolicy: Always
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME}-aphlict
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${PHAB_BASE_HOST}
    port:
      targetPort: webserver
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}-file
  spec:
    host: ${PHAB_FILE_HOST}
    port:
      targetPort: webserver
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    ports:
    - name: webserver
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${NAME}
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-aphlict
  spec:
    ports:
    - name: client
      port: 22280
      protocol: TCP
      targetPort: 22280
    - name: admin
      port: 22281
      protocol: TCP
      targetPort: 22281
    selector:
      deploymentconfig: ${NAME}-aphlict
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}-aphlict
  spec:
    host: ${PHAB_BASE_HOST}
    path: /ws
    port:
      targetPort: client
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}-aphlict
      weight: 100
    wildcardPolicy: None

#------------------------------------------------- Database

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${NAME}-db-config
  data:
    my.cnf: |
      [mysqld]
      symbolic-links = 0
      skip_name_resolve
      ignore-db-dir=lost+found
      sql_mode=STRICT_ALL_TABLES
      !includedir /etc/my.cnf.d

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}-db
  stringData:
    database-root-password: ${DATABASE_ROOT_PASSWORD}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-db
  spec:
    ports:
    - name: mariadb
      port: 3306
    selector:
      name: ${NAME}-db
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${NAME}-db
  spec:
    replicas: 1
    selector:
      name: ${NAME}-db
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}-db
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: ${NAME}-db
          - name: MYSQL_INNODB_BUFFER_POOL_SIZE
            value: ${MYSQL_POOL_SIZE}
          - name: MYSQL_DEFAULTS_FILE
            value: /opt/config/my.cnf
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mariadb
          ports:
          - containerPort: 3306
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mysql -h 127.0.0.1 -u root -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${NAME}-db-data
          - mountPath: /opt/config
            name: ${NAME}-db-config
        volumes:
        - name: ${NAME}-db-data
          persistentVolumeClaim:
            claimName: ${NAME}-db
        - name: ${NAME}-db-config
          configMap:
            name: ${NAME}-db-config
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mariadb
        from:
          kind: ImageStreamTag
          name: mariadb:10.1
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
